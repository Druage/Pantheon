/* COMPATIBILITY 
   - HLSL compilers
   - Cg   compilers
*/

/*
   Merge Dithering and Pseudo Transparency Shader v1.2 - Pass 2
   by Sp00kyFox, 2013

   Uses the alpha channel tag from pass 1 to merge those pixels with their neighbors.

*/

float3 merge2(float3 A, float3 B)
{
	return 0.5*(A+B);
}

float3 merge3(float3 L, float3 C, float3 R)
{
	return 0.25*(L+R) + 0.5*C;
}

struct input
{
	float2 video_size;
      float2 texture_size;
      float2 output_size;
};

struct out_vertex {
	half4 position : POSITION;
	float2 texCoord : TEXCOORD0;
	half4 t1 : TEXCOORD1;
	half2 loc : TEXCOORD2;
};


/*    VERTEX_SHADER    */
out_vertex main_vertex
(
	half4 position	: POSITION,
	float2 texCoord : TEXCOORD0,

   	uniform half4x4 modelViewProj,
	uniform input IN
)
{
	out_vertex OUT;

	OUT.position = mul(modelViewProj, position);

	half2 ps = half2(1.0/IN.texture_size.x, 1.0/IN.texture_size.y);
	half dx = ps.x;
	half dy = ps.y;

	OUT.texCoord = texCoord;
	OUT.t1.xy = half2( dx,  0); // F
	OUT.t1.zw = half2(  0, dy); // H
	OUT.loc = texCoord*IN.texture_size;

	return OUT;
}

/*    FRAGMENT SHADER    */
float4 main_fragment(in out_vertex VAR, uniform sampler2D decal : TEXUNIT0, uniform input IN) : COLOR
{
	float2 pos = VAR.loc; // pos = pixel position
	float2 dir = sign(pos); // dir = pixel direction

	float2 g1 = dir*VAR.t1.xy;
	//float2 g2 = dir*VAR.t1.zw;

	float4 C = tex2D(decal, VAR.texCoord).xyzw;
	float4 L1 = tex2D(decal, VAR.texCoord - g1).xyzw;
	float4 L2 = tex2D(decal, VAR.texCoord - (2*g1)).xyzw;
	float4 R1 = tex2D(decal, VAR.texCoord + g1).xyzw;
	float4 R2 = tex2D(decal, VAR.texCoord + (2*g1)).xyzw;
	
	//float4 U1 = tex2D(decal, VAR.texCoord - g2).xyzw;
	//float4 D1 = tex2D(decal, VAR.texCoord + g2).xyzw;

	//if (C.w == 1.0 || L1.w == 1.0 || R1.w == 1.0 || U1.w == 1.0 || D1.w == 1.0){
	if (C.w == 1.0 || L1.w == 1.0 || R1.w == 1.0){
		C = float4(merge3(L1.xyz,C.xyz,R1.xyz),1.0);
	}
	else if (L2.w == 1.0)
	{
		C = float4(merge2(L1.xyz,C.xyz),1.0);	
	}
	else if (R2.w == 1.0)
	{
		C = float4(merge2(C.xyz,R1.xyz),1.0);	
	}

	return C;
}
